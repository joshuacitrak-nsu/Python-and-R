---
title: "Using Spark"
format: revealjs
editor: visual
---

# Big Data in Python + R

```{r}
library(sparklyr)
library(tidyverse)
library(gt)

# Download data from kaggle
# https://www.kaggle.com/datasets/dhruvildave/spotify-charts/download?datasetVersionNumber=85

sc <- spark_connect(master = "local")

```

# R Version

```{r}
spark_charts <- spark_read_csv(sc, "charts", "data/charts.csv")
head(spark_charts, n = 10)

```

```{r}

spark_charts %>% 
    filter(chart == "top200", region == "Australia") %>% 
    group_by(artist) %>% 
    summarise(n_dates = n_distinct(date), 
              n_songs = n_distinct(title)) %>% 
    arrange(desc(n_dates)) %>% 
    head(10) 

```
```{r}

spark_charts %>% 
    filter(artist == "Oasis", region == "Australia") %>% 
    count(title, sort = TRUE) 

```


```{r}

spark_disconnect(sc)

```


```{python}
import pandas as pd

from pyspark.sql import SparkSession

spark = SparkSession.builder.getOrCreate()

SparkSession.builder.
# create SparkSession
spark = SparkSession.builder.master("local").appName("testing").getOrCreate()

# connect to Spark
sc = spark.sparkContext

# load necessary libraries
from pyspark.sql.functions import *
from pyspark.sql.types import *

# load data
spark_charts = spark.read.format("csv").option("header", "true").load("data/charts.csv")

# display first 10 rows of the data
spark_charts.show(10)

```

```{python}
import pandas as pd
import pyspark 

# assuming that `spark_charts` is a pandas DataFrame
result = spark_charts \
    .query('chart == "top200" and region == "Australia"') \
    .groupby('artist') \
    .agg(n_dates=('date', 'nunique'), n_songs=('title', 'nunique')) \
    .sort_values('n_dates', ascending=False) \
    .head(10)

```



```{r}
library(DBI)
DBI::dbGetQuery(sc, "
           select
                artist
                count(distinct date) n_dates,
                count(distinct title) n_songs
           from charts
           where chart = 'top200' and region = 'Australia'
           group by artist
           order by n_dates desc
           limit 10
")

```
